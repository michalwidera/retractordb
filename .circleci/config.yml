version: 2.1

workflows:

  commit:
    jobs:
      - build-release:
        filters:
          branches:
            only:
               - master
               - /issue_.*/
      - build-debug:
          requires:
            - build-release
          filters:
            branches:
              only:
                 - master
                 - /issue_.*/


  nightly:
    triggers:
      - schedule:
          # https://crontab.guru/#0_4_*_*_3,6
          # At 4:00 on Wednesday and Saturday.
          cron: "0 4 * * 3,6"
          filters:
            branches:
              only:
                - master
                - /issue_.*/
    jobs:
      - build-release
      - build-debug:
          requires:
            - build-release
      - build-ARM:
          requires:
            - build-release

  fix_dev_check:
    triggers:
      - schedule:
          # https://crontab.guru/#30_20_*_*_*
          # At 20:30.
          cron: "30 20 * * *"
          filters:
            branches:
              only:
                - /fix_.*/
                - /dev_.*/
    jobs:
      - build-release
      - build-debug:
          requires:
            - build-release
  
executors:
  ubuntu-docker:
    docker:
      - image: ubuntu-2404:edge
    resource_class: large

  ubuntu-machine-arm:
    machine:
      image: ubuntu-2204:current
    resource_class: arm.large

commands:
  prep-env-200:
    parameters:
      gcc_version:
        type: string
        default: "gcc"
    steps:
      - run:
          name: Install toolchain - conan 2.0
          command: |
            uname -a && cat /proc/version && cat /etc/issue
            sudo apt-get update
            sudo apt-get -y install <<parameters.gcc_version>> cmake make build-essential python3 python3-pip valgrind cppcheck mold
            pip3 install --upgrade pip
            pip3 install conan
            conan profile detect
  conan-build:
    parameters:
      build_type:
        type: string
        default: "Release"
      build_param:
        type: string
        default: ""
    steps:
      - run:
          name: Conan install and build; make install
          command: |
            conan source .
            conan install . -s build_type=<<parameters.build_type>> <<parameters.build_param>>
            conan build . -s build_type=<<parameters.build_type>> <<parameters.build_param>>
            cd build/<<parameters.build_type>> && make install
  run-test:
    parameters:
      build_type:
        type: string
        default: "Release"
    steps:
      - run:
          name: Smoke test
          command: |
            export PATH="$HOME/.local/bin:$PATH"
            cd build/<<parameters.build_type>> && make showelf
            xretractor -h && xqry -h
      - run:
          name: Regression & Unit test
          command: |
            export PATH="$HOME/.local/bin:$PATH"
            cd build/<<parameters.build_type>>/test && ctest -V
  run-cppcheck:
    parameters:
      build_type:
        type: string
        default: "Release"
    steps:
      - run:
          name: Static analysis
          command: |
            cd build/<<parameters.build_type>> && make cppcheck

jobs:
  build-release:
    working_directory: ~/retractordb
    executor: ubuntu-docker
    steps:
      - checkout
      - prep-env-200
      - conan-build:
          build_param: --build missing
      - run-test

  build-debug:
    working_directory: ~/retractordb
    executor: ubuntu-docker
    steps:
      - checkout
      - prep-env-200
      - conan-build:
          build_type: Debug
          build_param: --build missing
      - run-test:
          build_type: Debug

  build-ARM:
    parameters:
      build_type:
        type: string
        default: "Debug"
    working_directory: ~/retractordb
    executor: ubuntu-machine-arm
    steps:
      - checkout
      - prep-env-200:
          gcc_version: gcc-10
      - conan-build:
          build_type: <<parameters.build_type>>
          build_param: --build missing
      - run:
          name: Smoke test
          command: |
            export PATH="$HOME/.local/bin:$PATH"
            cd build/<<parameters.build_type>> && make showelf
            xretractor -h && xqry -h
      - run:
          name: Regression & Unit test
          command: |
            export PATH="$HOME/.local/bin:$PATH"
            cd build/<<parameters.build_type>>/test && ctest -V
